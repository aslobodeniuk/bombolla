#!/bin/bash
#
# Check that the code follows a consistant code style

INDENT_PARAMETERS="--line-length85 \
	--indent-level2 \
	--no-tabs \
	--tab-size8 \
        --struct-brace-indentation2 \
	--case-brace-indentation2 \
	--case-indentation0 \
        --indent-label0 \
	--continuation-indentation4 \
        --declaration-indentation2\
	--braces-on-if-line \
	--braces-on-struct-decl-line \
        --braces-on-func-def-line \
        --brace-indent2 \
        --no-space-after-casts \
        --cuddle-do-while \
	--cuddle-else \
        --blank-lines-after-declarations \
	--blank-lines-after-procedures \
        --blank-lines-after-commas \
        --break-before-boolean-operator \
        --spaces-around-initializers \
        --continue-at-parentheses \
        --paren-indentation2 \
        --preprocessor-indentation2 \
        --swallow-optional-blank-lines \
        --parameter-indentation2 \
	--honour-newlines"

build_and_test()
{
    echo "-- JIHN: Building --"
    meson build || exit 1
    ninja -C build  || exit 1

    echo "-- JIHN: Running tests --"
    ninja -C build test  || exit 1
}

check_format()
{
    # parameter is a file to check
    nf=$1

    newfile=`mktemp /tmp/bombolla-jihn-check.XXXXXX`
    indent ${INDENT_PARAMETERS} $nf -o $newfile 2>> /dev/null  || exit 1
    diff -u -p "${nf}" "${newfile}"
    r=$?
    rm "${newfile}"
    rm "${nf}"
    if [ $r != 0 ] ; then
	echo "================================================================================================="
	echo " Code style error in: $file                                                                      "
	echo "                                                                                                 "
	echo " Please fix before committing. Don't forget to run git add before trying to commit again.        "
	echo " If the whole file is to be committed, this should work (run from the top-level directory):      "
	echo "                                                                                                 "
	echo "   ./jihn $file; git add $file; git commit"
	echo "                                                                                                 "
	echo "================================================================================================="
        exit 1
    fi
}

if test "x$1" = "x--full-check"; then
    echo "-- JIHN: CI mode --"
    echo "-- JIHN: Checking all the files --"
    for file in `find * . 2>&1 | grep \\\.[ch]\$ | grep -v plugins/cogl/cogl | grep -v "^\\\./build/" | grep -v "^build/"` ; do
	# nf is the temporary checkout. This makes sure we check against the
	# revision in the index (and not the checked out version).
	nf=`mktemp /tmp/bombolla-jihn-check2.XXXXXX`
	cp ${file} $nf
	check_format $nf
    done

    build_and_test
    echo "-- Jihn allows this travaller to pass --"
    exit 0
fi

if test "x$1" = "x"; then
    echo "-- JIHN: Commit-hook mode.. --"
    echo "-- JIHN: Checking style --"
    for file in `git diff-index --cached --name-only HEAD --diff-filter=ACMR| grep "\.[ch]$"` ; do
	# nf is the temporary checkout. This makes sure we check against the
	# revision in the index (and not the checked out version).
	nf=`git checkout-index --temp ${file} | cut -f 1`
	check_format $nf
    done
    echo "-- JIHN: Checking style pass --"

    build_and_test
else
    indent ${INDENT_PARAMETERS} $@
fi

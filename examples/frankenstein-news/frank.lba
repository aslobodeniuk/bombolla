# NOTE/TODO it seems that we can only properly
# call python from the thread from which it was created,
# calling it from any other threads deadlocks.
# Same with JS, so we do everything through the main loop

dna LbaPythonAsync GObject LbaPython LbaAsync
async create LbaPythonAsync py
sync
# Put Async mixin on top of it so the dispose & finalize will be async
dna LbaFeedParserAsync __main__+LbaFeedParser LbaAsync
create LbaFeedParserAsync feed

# this one already does it thought the GMainLoop.
create LbaGjs js

# Put Async mixin on top of it so the dispose & finalize will be async
# dna FrankNewsWindowAsync FrankNewsWindow LbaAsync
async create FrankNewsWindow jsw

async call feed.check-for-updates
async bind jsw.title feed.title
async bind jsw.my-summary feed.summary
async call jsw.my-open

sync
# just print the object tree to see how nice it is
dump FrankNewsWindow

# So an object written in Python with LbaAsync mixin on it already can be
# created and destroyed without a problem from any thread.

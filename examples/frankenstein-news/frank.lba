# NOTE: you can see so many "async" and "LbaAsync" words
# here, because we need to align Python and JS to their theads.
# In fact now we align everything to the default GMainContext
# that runs in LbaCore, because JS only works through GMainxContext.
# Python only works from one same thread it was created from.

dna LbaPythonAsync GObject LbaPython LbaAsync
async create LbaPythonAsync py
sync

# Put Async mixin on top of it so the dispose & finalize will be async
dna LbaFeedParserAsync __main__+LbaFeedParser LbaAsync
create LbaFeedParserAsync feed

# this one already does it thought the GMainLoop.
create LbaGjs js

dna FrankNewsWindowAsync FrankNewsWindow LbaAsync
create FrankNewsWindowAsync jsw


# LbaAsync can't override properties and signals for now, that is why
# we have to call this commands through "async" specifier
async call feed.check-for-updates
async bind jsw.title feed.title
async bind jsw.my-summary feed.summary
async call jsw.my-open

sync
# just print the object tree to see how nice it is
dump FrankNewsWindow

# NOTE/TODO it seems that we can only properly
# call python from the thread from which it was created,
# calling it from any other threads deadlocks.
# Same with JS, so we do everything through the main loop

dna LbaPythonAsync GObject LbaPython LbaAsync
async create LbaPythonAsync py
sync
# Put Async mixin on top of it so the dispose & finalize will be async
dna LbaFeedParserAsync __main__+LbaFeedParser LbaAsync

async create LbaFeedParserAsync feed

# this one already does it thought the GMainLoop.
create LbaGjs js

# Put Async mixin on top of it so the dispose & finalize will be async
# dna FrankNewsWindowAsync FrankNewsWindow LbaAsync
async create FrankNewsWindow jsw

async call feed.check-for-updates
async bind jsw.title feed.title
async bind jsw.my-summary feed.summary
async call jsw.my-open

sync

# FIXME: destroying feed from hash table crashes, and mutogene LbaAsync
# doesn't seem to fix that.. So the issue is that when we "destroy" the feed first,
# in fact we only unref it, and it doesn't go through GObject.

async destroy feed

#!/bin/bash
commit_mode=0
LOGF="build/firulais-examples-test-log.txt"
DOC_PREFIX="$PWD/build/doc-prefix"

colored_msg()
{
    NC='\033[0m'
    echo -e "${1}$2${NC} $3"
}

message()
{
    YELLOW='\033[1;33m'
    colored_msg "$YELLOW" "FIRULAIS:" "$1"
}

angry_message()
{
    RED='\033[0;31m'
    colored_msg "$RED" "$1" "$2"
}

happy_message()
{
    GREEN='\033[1;32m'
    colored_msg "$GREEN" "$1" "$2"
}

INDENT_PARAMETERS="--line-length85 \
	--indent-level2 \
	--no-tabs \
	--tab-size8 \
        --struct-brace-indentation2 \
	--case-brace-indentation2 \
	--case-indentation0 \
        --indent-label0 \
	--continuation-indentation4 \
        --declaration-indentation2\
	--braces-on-if-line \
	--braces-on-struct-decl-line \
        --braces-on-func-def-line \
        --brace-indent2 \
        --no-space-after-casts \
        --cuddle-do-while \
	--cuddle-else \
        --blank-lines-after-declarations \
	--blank-lines-after-procedures \
        --blank-lines-after-commas \
        --break-before-boolean-operator \
        --spaces-around-initializers \
        --continue-at-parentheses \
        --paren-indentation2 \
        --preprocessor-indentation2 \
        --swallow-optional-blank-lines \
        --parameter-indentation2 \
	--honour-newlines"

test_example()
{
    message "Testing '$1' example"
    echo "($1) Running '$2'" >>${LOGF}
    echo 'q' | G_DEBUG=fatal-warnings G_MESSAGES_DEBUG=all $2 1>>${LOGF} 2>&1 || (angry_message "Test '$1' failed" "check ${LOGF}"; exit 1 )

}

do_test()
{
    message "Running tests"
    ninja -C build test  || exit 1

    rm -rf $LOGF || true

    test_example "plugin in vala" "build/bombolla/tools/shell/bombolla-shell -p build -i examples/plugin-in-vala" || exit 1
    LBA_PYTHON_PLUGINS_PATH=$(pwd)/examples/python test_example "plugin in python" "build/bombolla/tools/shell/bombolla-shell -p build/bombolla -i examples/plugin-in-python" || exit 1
    LBA_JS_PLUGINS_PATH=$(pwd)/examples/js/pure-gobject test_example "plugin in js gobject" "build/bombolla/tools/shell/bombolla-shell -p build/bombolla -i examples/js/pure-gobject.lba" || exit 1
    if test "x$1" != "x--ci-mode"; then
	# Cogl doesn't seem to work on wayland
	# But then.... how does Clutter works?
	if test "x$XDG_SESSION_TYPE" != "xwayland"; then
	    test_example "cogl" "build/bombolla/tools/shell/bombolla-shell -p build/bombolla -i examples/cogl" || exit 1
	    LBA_PLUGINS_PATH=$(pwd)/build/bombolla test_example "using from python" "python3 examples/python/use-from-python.py" || exit 1
	fi
	# =================================================

	if pkg-config --modversion gtk+-3.0 >/dev/null 2>/dev/null; then
	    test_example "plugin in js gtk3" "build/bombolla/tools/shell/bombolla-shell -p build/bombolla -i examples/js/plugin-in-js-gtk3.lba" || exit 1
	fi
	if pkg-config --modversion gtk4 >/dev/null 2>/dev/null; then
	    test_example "plugin in js gtk4" "build/bombolla/tools/shell/bombolla-shell -p build/bombolla -i examples/js/plugin-in-js-gtk4.lba" || exit 1
	fi

	LBA_PYTHON_PLUGINS_PATH=$(pwd)/examples/frankenstein-news LBA_JS_PLUGINS_PATH=$(pwd)/examples/frankenstein-news test_example "FRANKENSTEIN" "build/bombolla/tools/shell/bombolla-shell -p build/bombolla/ -i examples/frankenstein-news/frank.lba" || exit 1
    fi

    happy_message "All tests passed!" "Enjoy."
}

build_and_test()
{
    message "Building"
    meson setup build --prefix=${DOC_PREFIX} || exit 1
    ninja -C build  || exit 1

    do_test $1 || exit 1
}

do_indent()
{
    indent ${INDENT_PARAMETERS} $@
}

check_format()
{
    # parameter is a file to check
    nf=$1

    newfile=`mktemp /tmp/bombolla-Firulais-check.XXXXXX`
    indent ${INDENT_PARAMETERS} $nf -o $newfile 2>> /dev/null  || exit 1
    diff -u -p "${nf}" "${newfile}"
    r=$?
    rm "${newfile}"
    rm "${nf}"
    if [ $r != 0 ]; then
	if [ $commit_mode != 0 ]; then
	    message "Indenting '$file'.."
	    do_indent $file
	    message "Git-adding '$file'.."
	    git add $file
	else
	    echo "================================================================================================="
	    angry_message "Code style error" "in: $file"
	    echo "                                                                                                 "
	    echo " Please fix before committing. Don't forget to run git add before trying to commit again.        "
	    echo " If the whole file is to be committed, this should work (run from the top-level directory):      "
	    echo "                                                                                                 "
	    echo "   ./Firulais $file; git add $file; git commit"
	    echo "                                                                                                 "
	    echo "================================================================================================="
	    exit 1
	fi
    fi
}

git_style_check()
{
    message "Checking style"
    for file in `git diff-index --cached --name-only HEAD --diff-filter=ACMR| grep "\.[ch]$"` ; do
	# nf is the temporary checkout. This makes sure we check against the
	# revision in the index (and not the checked out version).
	nf=`git checkout-index --temp ${file} | cut -f 1`
	check_format $nf || exit 1
    done
    happy_message "Style check passed" ""
}

commit_hook()
{
    git_style_check || exit 1
    build_and_test "" || exit 1
}

if test "x$1" = "x--check-format-all"; then
    message "Checking all the files"
    for file in `find * . 2>&1 | grep \\\.[ch]\$ | grep -v "^\\\./build/" | grep -v "^build/"` ; do
	# nf is the temporary checkout. This makes sure we check against the
	# revision in the index (and not the checked out version).
	nf=`mktemp /tmp/bombolla-Firulais-check2.XXXXXX`
	cp ${file} $nf
	check_format $nf
    done
    exit 0
fi

if test "x$1" = "x--ci-mode"; then
    message "CI mode"
    build_and_test "--ci-mode" || (angry_message "Testing failed" "" && exit 1)
    message "Firulais allows this traveller to pass"
    exit 0
fi

if test "x$1" = "x"; then
    message "Commit-hook mode"
    commit_hook || exit 1
else
    if test "x$1" = "xenv"; then
	message "entering the env wrapper"
	meson devenv -C build
	exit 0
    fi
    if test "x$1" = "xcommit"; then
	message "Commit mode"
	commit_mode=1
	git_style_check
	message "Do git commit.."
	git commit
	exit 0
    fi
    if test "x$1" = "xdoc"; then
	meson setup build --prefix=${DOC_PREFIX} --reconfigure || exit 1
	ninja -C build install || (angry_message "Run Firulais first" "" && exit 1)
	if test "x$(which devhelp)" = "x"; then
	    sensible-browser $(pwd)/build/doc-prefix/share/gtk-doc/html/bmixin/index.html &
	else
	    XDG_DATA_DIRS=$XDG_DATA_DIRS:$(pwd)/build/doc-prefix/share/ devhelp --search "BMixin Manual" &
	fi
	message "Enjoy the doc"
	exit 0
    fi

    do_indent $@
fi
